---
# Part: Apache
#
# Description: Sets up Apache2 and mods
#
# Parameters:
#
# Dependencies:
# - ufw:tasks:entry
# - rsyslog:tasks:entry
# - logrotate:tasks:entry
# - monit:tasks:entry
# - common:tasks:service
#
# Creates:
# - /etc/apache2/vhosts.d
#
# File modifications:
# - /etc/apache2/envvars
# - /etc/apache2/apache2.conf
# - /etc/apache2/ports.conf
# - /etc/apache2/conf.d/security
#
###############################################################################

- name: install | Install required apache packages
  apt:
    pkg={{ item }}
    state=installed
  with_items:
    - apache2
    - apache2-utils # ab, rotatelogs
    - ssl-cert # snakeoil certificate
  tags:
    - install

- name: "config | Configure: /etc/apache2/*"
  template:
    src={{ item }}.j2
    dest=/etc/apache2/{{ item }}
    owner=root group=root
  with_items:
    - envvars
    - apache2.conf
    - ports.conf
    - conf.d/security
  notify: restart apache
  tags:


- name: "install | Enable required modules: {{ apache.mods_enabled|join(', ') }}"
  command: a2enmod {{ item }}
  register: a2enmod_result
  with_items: apache.mods_enabled
  changed_when: "'already enabled' not in a2enmod_result.stdout"
  notify: restart apache
  tags:
    - install
    - apachemods

- name: "clean | Disable banned modules: {{ apache.mods_disabled|join(', ') }}"
  command: a2enmod {{ item }}
  with_items: apache.mods_disabled
  notify: restart apache
  tags:
    - clean
    - apachemods

- name: "clean | Disable default apache virtual host"
  command: a2dissite 000-default
  register: a2dissite_result
  changed_when: "'already disabled' not in a2dissite_result.stdout"
  tags:
    - clean

- name: "clean | Remove default index file from docroot: /var/www/index.html"
  file:
    path=/var/www/index.html
    state=absent
  tags:
    - clean

- name: "config | vhost | Create a directory for per vhost configurations: /etc/apache2/vhosts.d/"
  file:
    path=/etc/apache2/vhosts.d
    state=directory
    owner=root group=root
  tags:
    - vhost
    - config

- name: "install | Enable: vhost_alias"
  command: a2enmod vhost_alias
  register: a2enmod_result
  with_items: apache.mods_enabled
  changed_when: "'already enabled' not in a2enmod_result.stdout"
  notify: restart apache
  when: apache.wildcard_subdomains
  tags:
    - install
    - apachemods

- name: "config | wildcard subdomains | Enable: /etc/apache2/conf.d/wildcard-subdomains"
  template:
    src={{ item }}.j2
    dest=/etc/apache2/{{ item }}
    owner=root group=root
  with_items:
    - conf.d/wildcard-subdomains
  notify: restart apache
  when: apache.wildcard_subdomains
  tags:
    - config

- name: "config | wildcard subdomains | Add global robots.txt: /var/www/robots.txt"
  copy:
    src=robots.txt
    dest=/var/www/robots.txt
    owner=root group=root mode=644
  when: apache.wildcard_subdomains
  tags:
    - config

# Create a default virtual host
- include: vhost.yml
  vars:
    enabled: '{{ apache.enabled and not apache.wildcard_subdomains }}'
    vhost: '{{ ansible_fqdn }}'
    docroot: '/var/www/{{ ansible_fqdn }}'
    ssl:
      enabled: true
      certificate_file: '{{ apache.ssl.certificate_file }}'
      certificate_key_file: '{{ apache.ssl.certificate_key_file }}'
      certificate_chain_file: '{{ apache.ssl.certificate_chain_file }}'
  tags:
    - config

- name: lint | verify configuration files are valid
  command: apachectl configtest
  changed_when: false
  tags:
    - lint

# General management
###

- include: ../../common/tasks/service.yml
  vars:
    name: apache2
    enabled: '{{ apache.enabled }}'

- include: ../../monit/tasks/entry.yml
  vars:
    name: apache
    port: '{{ apache.port.http }}'
    enabled: '{{ apache.enabled }}'

- include: ../../logrotate/tasks/entry.yml
  vars:
    name: apache
    logs: '{{ apache.log.error_file }} {{ apache.log.access_file }}'
    size: 100M
    maxage: 30
    postrotate: '/etc/init.d/apache2 reload > /dev/null'
    enabled: '{{ apache.enabled }}'

- include: ../../rsyslog/tasks/entry.yml
  vars:
    name: apache-access
    mode: filemonitor
    logfile: '{{ apache.log.access_file }}'
    enabled: '{{ apache.enabled }}'

- include: ../../rsyslog/tasks/entry.yml
  vars:
    name: apache-error
    mode: filemonitor
    logfile: '{{ apache.log.error_file }}'
    enabled: '{{ apache.enabled }}'

- include: ../../ufw/tasks/entry.yml
  vars:
    name: '{{ apache.port.http }}'
    enabled: '{{ apache.enabled }}'

- include: ../../ufw/tasks/entry.yml
  vars:
    name: '{{ apache.port.https }}'
    enabled: '{{ apache.enabled and apache.ssl.enabled }}'
