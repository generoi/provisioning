# {{ ansible_managed }}

# Configuration file for varnish
#
# /etc/init.d/varnish expects the variables $DAEMON_OPTS, $NFILES and $MEMLOCK
# to be set from this shell script fragment.
#
# Note: If systemd is installed, this file is obsolete and ignored.  You will
# need to copy /lib/systemd/system/varnish.service to /etc/systemd/system/ and
# edit that file.

# Should we start varnishd at boot?  Set to "no" to disable.
START=yes

# Maximum number of open files (for ulimit -n)
NFILES=131072

# Maximum locked memory size (for ulimit -l)
# Used for locking the shared memory log in memory.  If you increase log size,
# you need to increase this number as well
MEMLOCK=82000

# Default varnish instance name is the local nodename.  Can be overridden with
# the -n switch, to have more instances on a single server.
INSTANCE=$(uname -n)

# This file contains 4 alternatives, please use only one.

## Alternative 1, Minimal configuration, no VCL
#
# Listen on port 6081, administration on localhost:6082, and forward to
# content server on localhost:8080.  Use a 1GB fixed-size cache file.
#
# DAEMON_OPTS="-a :6081 \
#              -T localhost:6082 \
#              -b localhost:8080 \
#              -u varnish -g varnish \
#            -S /etc/varnish/secret \
#              -s file,/var/lib/varnish/$INSTANCE/varnish_storage.bin,1G"


## Alternative 2, Configuration with VCL
#
# Listen on port 6081, administration on localhost:6082, and forward to
# one content server selected by the vcl file, based on the request.  Use a 1GB
# fixed-size cache file.
#

DAEMON_OPTS="-a :{{ port }} \
            -T {{ backend_addr }}:{{ admin_port }} \
            -f {{ vcl_conf }} \
            -S /etc/varnish/secret \
            -p thread_pool_add_delay={{ thread_pool_add_delay }} \
            -p thread_pools={{ thread_pools }} \
            -p thread_pool_min={{ thread_pool_min }} \
            -p thread_pool_max={{ thread_pool_max }} \
            -p session_linger={{ session_linger }} \
            -p sess_workspace={{ sess_workspace }} \
            -s malloc,{{ malloc_size }}"
