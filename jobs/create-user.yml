---
# Job: Create User
#
# Description: Create a new user account with a randomly generated password
# which will be emailed to them.
#
# Parameters:
#
# Dependencies:
# - ../roles/mariadb/tasks/create-users.yml
# - ../roles/user/tasks/create-users.yml
# - install-dotfiles.yml
#
# Creates:
# - /home/{{ username }}
# - /home/{{ username }}/.ssh
# - /home/{{ username }}/.ssh/authorized_keys
#
# File modifications:
#
###############################################################################

- hosts: any
  user: root
  vars:
    ip: ansible_eth0.ipv4.address
    hostname: ansible_hostname
    dotfils_repository: https://github.com/generoi/dotfiles
  vars_prompt:
    - username: 'Username'
    - fullname: 'Fullname'
    - email: 'E-mail'
    - github: 'GitHub username'
    - name: 'user_groups'
      prompt: 'Comma delimited list of user groups'
      default: 'admin,sudo'
    - name: 'account_type'
      prompt: 'Account type (admin,user)'
      default: 'admin'
  tasks:
    # Create a MariaDB user, consequently creating a credentials file with a
    # random generated password.
    - include: ../roles/mariadb/tasks/create-users.yml
      vars:
        accounts: [{ username: username, privileges: '*.*:ALL' }]

    - name: User | Store database password in variable
      shell: python -c "print \"{{ lookup('password', 'credentials/' + hostname + '/' + username + '/mariadb_password')) }}\")"
      register: password

    # Encrypt the password generated in the credentials file
    - name: User | Generate encrypted password for usage in user module
      # Use passlib for cross platform encryption
      shell: python -c 'from passlib.hash import sha512_crypt; print sha512_crypt.encrypt("{{ password.output }}")'
      register: encrypted_password

    - include: ../roles/user/tasks/create-users.yml
      vars:
        users: [{ username: username, fullname: fullname, user_groups: user_groups }]

    - name: User | Set password to same as the database
      user:
        name=username
        password=encrypted_password.output
        update_password=on_create # Requires ansible 1.3

    # Send an email with the password to the user.
    ###
    - name: User | Email newly created user at {{ email }} from {{ notify_email }}
      mail:
        from={{ notify_email }}
        to={{ email }}
        subject="New user account created"
        body={{ lookup('template', 'files/create-new-user-email.j2' }}

    # Install dotfiles
    ###
    - name: User | Get dotfiles for user: /home/{{ username }}/.dotfiles
      sudo_user: username
      git:
        repo={{ dotfiles_repository }}
        dest=/home/{{ username }}/.dotfiles

    - name: User | Install dotfiles
      sudo_user: username
      command:
        /home/{{ username }}/.dotfiles/bootstrap.sh install
        creates=/home/{{ username }}/.vimrc
