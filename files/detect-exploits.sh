#!/bin/sh

DIR="$1"
ENV="$2"

# Number of alerts encountered
ALERT=0

# Pretty print a run
run() {
  local title=$1
  local title_chars=${#title}
  shift;
  local output="$@"
  if [ ${#output} -gt 0 ]; then
    echo
    echo "$title"
    while ((title_chars--)); do printf '-'; done
    echo 
    echo "$output" | sed 's/:/\t/'
  fi
  ((alert++))
}

find_php_files() {
  find "$1" -type f -regextype posix-egrep -regex '.*(php|cgi|inc|module|install|profile)$' -print0
}

create_regex_or() {
  local operands=("${@}")
  local old_IFS="$IFS"
  IFS="|"
  pattern="${operands[*]}"
  IFS=$old_IFS
  echo $pattern
}

FORBIDDEN_WORDS=(
  r0nin
  m0rtix
  upl0ad
  r57shell
  c99shell
  shellbot
  phpshell
  void\.ru
  phpremoteview
  directmail
  bash_history
  \.ru/
  multiviews
  cwings
  vandal
  viagra
  casino
  cialis
  poker
  bitchx
  eggdrop
  guardservices
  psybnc
  dalnet
  undernet
  vulnscan
  spymeta
  raslan58
  Webshell
)

FORBIDDEN_FILENAMES=(
  wp-info.txt
  _new.php
  _old.php
  php.pngg
  php.jpgg
  php.giff
  sql
)

# Regex Patterns
PATTERN_EVAL='((eval.*(base64_decode|gzinflate|\$_))|\$[0O]{4,}|FilesMan|JGF1dGhfc|IIIl|die\(PHP_OS|posix_getpwuid|Array\(base64_decode|document\.write\("\\u00|sh(3(ll|11)))'
PATTERN_FORBIDDEN_WORDS=$(create_regex_or "${forbidden_words[@]}")
PATTERN_LONG_LINE='.{200}'

# All patterns to look for in a file
PATTERN_INFILE="($PATTERN_EVAL)|($PATTERN_FORBIDDEN_WORDS)|($PATTERN_LONG_LINE)"
# Filename patterns
PATTERN_FILENAMES=$(create_regex_or "${FORBIDDEN_FILENAMES[@]}")

### Scanners

keyword_scan() {
  run "Found suspicious keywords in php files:" \
    "$(find_php_files "$1" | xargs -0 grep --extended-regexp --ignore-case --color=never "$PATTERN_INFILE")"
}

uploads_scan() {
  if [ -d "$1" ]; then
    run "Found PHP scripts within the $dir folder:" \
      "$(find "$1" -name "*.php" -print0)"
  fi
}
filename_scan() {
  run "Found suspicous filenames:" \
    "$(find "$1" -regextype posix-egrep -regex ".*($PATTERN_FILENAMES)" -print0)"
}
duplicate_scan() {
  run "There should only existing one $2" \
    "$(find "$1" -mindepth 2 -name "$2")"
}

### Environments

wordpress() {
  keyword_scan "$DIR"
  uploads_scan "${DIR}/wp-content/uploads"
  uploads_scan "${DIR}/wp-content/files_mf"
  filename_scan "$DIR"
  duplicate_scan "$DIR" "wp-config.php"
}
drupal() {
  keyword_scan "$DIR"
  for d in ${DIR}/sites/*/files; do
    uploads_scan "${DIR}/${d}"
  done
  filename_scan "$DIR"
}


### Detect environment and run

if [ -f $DIR/wp-config.php ] && [ "x$ENV" == "xwordpress" ]; then
  wordpress
elif [ -f $DIR/sites/default/config.php ] && [ "x$ENV" == "drupal" ]; then
  drupal
else
  echo "Invalid environment: $ENV"
  exit 3
fi

if [ $alert -gt 0 ]; then
  exit 1
fi
